import unittest
from core.vulnerability_scanner import VulnerabilityScanner
from core.api_client import APIClient
from core.scan_manager import ScanProfiles

class TestVulnerabilityScanner(unittest.TestCase):
    def setUp(self):
        self.api_client = APIClient("Example API", "https://example.com", "1.0")
        self.scan_profile = ScanProfiles.DEFAULT

    def test_init(self):
        scanner = VulnerabilityScanner(self.api_client, self.scan_profile)
        self.assertEqual(scanner.scanProfile, self.scan_profile)
        self.assertIsNotNone(scanner.vuln_tests)

    def test_run_tests(self):
        scanner = VulnerabilityScanner(self.api_client, self.scan_profile)
        results = scanner.run_tests()
        self.assertIsNotNone(results)
        self.assertIsInstance(results, list)

    def test_vuln_tests_not_empty(self):
        scanner = VulnerabilityScanner(self.api_client, self.scan_profile)
        self.assertGreater(len(scanner.vuln_tests), 0)

    def test_api_client_set(self):
        scanner = VulnerabilityScanner(self.api_client, self.scan_profile)
        self.assertEqual(scanner.api_client, self.api_client)

    def test_scan_profile_set(self):
        scanner = VulnerabilityScanner(self.api_client, self.scan_profile)
        self.assertEqual(scanner.scanProfile, self.scan_profile)

if __name__ == "__main__":
    unittest.main()