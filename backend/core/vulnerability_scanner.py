# Manages the scanning.
# Uses APIClient instance to perform a scan.
# Scan results managed my ResultManager
# Has a list of vulnerability tests that the user defines.
# Iterates through each test and runs the scan .
# Different VulnerabilityScanner objects should be used for different scanning profiles.

# from core.scan_manager import ScanProfiles
from core.vulnerability_test import BOLA_Scan, BKEN_AUTH_Scan, BOPLA_Scan, URC_Scan, BFLA_Scan, UABF_Scan, SSRF_Scan, SEC_MISC_Scan, IIM_Scan, UCAPI_Scan

class VulnerabilityScanner:
    def __init__(self, api_client, scan_profile):
        self.api_client = api_client
        self.scanProfile = scan_profile
        self.vuln_tests = []

    def _configure_testing(self):
        #Assume default for now
        self.vuln_tests.append(BOLA_Scan())
        # vuln_tests.append(BKEN_AUTH_Scan())
        # vuln_tests.append(BOPLA_Scan())
        # vuln_tests.append(URC_Scan())
        # vuln_tests.append(BFLA_Scan())
        # vuln_tests.append(UABF_Scan())
        # vuln_tests.append(SSRF_Scan())
        # vuln_tests.append(SEC_MISC_Scan())
        # vuln_tests.append(IIM_Scan())
        # vuln_tests.append(UCAPI_Scan())

    def run_tests(self):
        self._configure_testing()
        results = []
        for scan in self.vuln_tests:
            scan_result = scan.run_test(self.api_client)
            results.append(scan_result)
        
        return results