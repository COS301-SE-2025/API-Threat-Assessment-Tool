#!/bin/bash

# This script toggles Python web servers on and off.
# It stores the Process ID (PID) in a .pid file to track state.

# Function to toggle a single server
# Arguments: $1: script name, $2: pid file, $3: log file, $4: server friendly name
toggle_server() {
    local SCRIPT_NAME=$1
    local PID_FILE=$2
    local LOG_FILE=$3
    local SERVER_NAME=$4

    echo "--- Toggling $SERVER_NAME Server ---"

    # Check if the .pid file exists
    if [ -f "$PID_FILE" ]; then
        # If it exists, the server is considered ON, so we turn it OFF
        PID=$(cat "$PID_FILE")
        echo "Found PID file for $SERVER_NAME with PID: $PID. Attempting to stop..."
        
        # Verify a process with this PID is actually running before trying to kill it
        if ps -p $PID > /dev/null; then
            kill $PID
            sleep 1 # Give it a second to terminate gracefully
            echo "✅ $SERVER_NAME server (PID: $PID) stopped."
        else
            echo "⚠️ Stale PID file found, but no process with PID $PID is running. Cleaning up."
        fi
        rm "$PID_FILE"
    else
        # If no .pid file, the server is OFF, so we turn it ON
        echo "No PID file found for $SERVER_NAME. Starting server..."
        
        # Check if the python script actually exists
        if [ ! -f "$SCRIPT_NAME" ]; then
            echo "❌ Error: Script file '$SCRIPT_NAME' not found!"
            return
        fi
        
        # Start the python script in the background using nohup
        # stdout and stderr will be redirected to the log file
        nohup venv/bin/python "$SCRIPT_NAME" > "$LOG_FILE" 2>&1 &
        
        # Capture the PID of the last background process and save it
        PID=$!
        echo $PID > "$PID_FILE"
        echo "✅ $SERVER_NAME server started with PID: $PID. Log file: $LOG_FILE"
    fi
}

# Main script logic to handle command-line arguments
if [ -z "$1" ]; then
    echo "Usage: $0 [mock|oast|all]"
    exit 1
fi

case "$1" in
    mock)
        toggle_server "mock_api.py" "mock_api.pid" "mock_api.log" "Mock API"
        ;;
    oast)
        toggle_server "oast_server.py" "oast_server.pid" "oast_server.log" "OAST"
        ;;
    all)
        toggle_server "mock_api.py" "mock_api.pid" "mock_api.log" "Mock API"
        echo "" # Add a newline for better readability
        toggle_server "oast_server.py" "oast_server.pid" "oast_server.log" "OAST"
        ;;
    *)
        echo "Invalid argument. Usage: $0 [mock|oast|all]"
        exit 1
        ;;
esac

echo "--------------------------------"